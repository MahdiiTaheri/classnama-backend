{
    "swagger": "2.0",
    "info": {
        "description": "API for ClassNama, a school management platform.",
        "title": "ClassNama",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/attendance": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Mark a single attendance record (create or update)",
                "operationId": "markAttendance",
                "parameters": [
                    {
                        "description": "Attendance payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.markAttendancePayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/store.AttendanceRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/attendance/bulk": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Bulk mark attendance for a classroom",
                "operationId": "bulkMarkAttendance",
                "parameters": [
                    {
                        "description": "Bulk attendance payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.bulkAttendancePayload"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/attendance/classrooms/{classroomID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Get attendance for a classroom on a date",
                "operationId": "getAttendanceByClassroomDate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Classroom ID",
                        "name": "classroomID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date YYYY-MM-DD",
                        "name": "date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/store.AttendanceRecord"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/attendance/students/{studentID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Get attendance records for a student",
                "operationId": "getAttendanceByStudent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Student ID",
                        "name": "studentID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "From date YYYY-MM-DD",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "To date YYYY-MM-DD",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/store.AttendanceRecord"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/execs": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns a list of all execs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Execs"
                ],
                "summary": "Get all executives",
                "operationId": "getExecs",
                "responses": {
                    "200": {
                        "description": "List of execs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/store.Exec"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {}
                    }
                }
            }
        },
        "/execs/login": {
            "post": {
                "description": "Login as an Exec (admin or manager) and get a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Execs"
                ],
                "summary": "Exec Login",
                "parameters": [
                    {
                        "description": "Login payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.LoginPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the logged-in exec and JWT token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/execs/register": {
            "post": {
                "description": "Only Execs with manager/admin roles can create new Execs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Execs"
                ],
                "summary": "Register a new Exec",
                "parameters": [
                    {
                        "description": "Exec registration payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.ExecRegisterPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns the created Exec and JWT token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/execs/{execID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns a single exec by ID (must be set in context via middleware)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Execs"
                ],
                "summary": "Get a single executive",
                "operationId": "getExec",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exec ID",
                        "name": "execID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exec object",
                        "schema": {
                            "$ref": "#/definitions/store.Exec"
                        }
                    },
                    "404": {
                        "description": "Exec not found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes an exec by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Execs"
                ],
                "summary": "Delete an executive",
                "operationId": "deleteExec",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exec ID",
                        "name": "execID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Exec not found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {}
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates an exec. Only non-nil fields in the payload are updated. Versioning ensures concurrency safety.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Execs"
                ],
                "summary": "Update an executive",
                "operationId": "updateExec",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exec ID",
                        "name": "execID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Exec fields to update",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.UpdateExecPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated exec object",
                        "schema": {
                            "$ref": "#/definitions/store.Exec"
                        }
                    },
                    "400": {
                        "description": "Bad request / validation failed",
                        "schema": {}
                    },
                    "404": {
                        "description": "Exec not found",
                        "schema": {}
                    },
                    "409": {
                        "description": "Conflict / concurrent update",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {}
                    }
                }
            }
        },
        "/students": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Get all students",
                "operationId": "getStudents",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/store.Student"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Only Execs with manager/admin roles can create new Students",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Register a new Student",
                "parameters": [
                    {
                        "description": "Student registration payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.StudentRegisterPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns the created Student",
                        "schema": {
                            "$ref": "#/definitions/store.Student"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/students/login": {
            "post": {
                "description": "Login as a Student and get a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Student Login",
                "parameters": [
                    {
                        "description": "Login payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.LoginPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the logged-in student and JWT token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/students/{studentID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Get a student by ID",
                "operationId": "getstudent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "student ID",
                        "name": "studentID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/store.Student"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Delete a student",
                "operationId": "deleteStudent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "student ID",
                        "name": "studentID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Update a student",
                "operationId": "updateStudent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "student ID",
                        "name": "studentID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "student update payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.UpdateStudentPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/store.Student"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/teachers": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "Get all teachers",
                "operationId": "getTeachers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/store.Teacher"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Only Execs with manager/admin roles can create new Teachers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "Register a new Teacher",
                "parameters": [
                    {
                        "description": "Teacher registration payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.TeacherRegisterPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns the created Teacher",
                        "schema": {
                            "$ref": "#/definitions/store.Teacher"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/teachers/login": {
            "post": {
                "description": "Login as a Teacher and get a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "Teacher Login",
                "parameters": [
                    {
                        "description": "Login payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.LoginPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the logged-in teacher and JWT token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/teachers/{teacherID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "Get a teacher by ID",
                "operationId": "getTeacher",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Teacher ID",
                        "name": "teacherID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/store.Teacher"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "Delete a teacher",
                "operationId": "deleteTeacher",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Teacher ID",
                        "name": "teacherID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "Update a teacher",
                "operationId": "updateTeacher",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Teacher ID",
                        "name": "teacherID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Teacher update payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.UpdateTeacherPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/store.Teacher"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/teachers/{teacherID}/students": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns a list of all students assigned to a specific teacher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Get students of a teacher",
                "operationId": "getStudentsByTeacher",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Teacher ID",
                        "name": "teacherID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of students",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/store.Student"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Teacher not found / no students",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "main.ExecRegisterPayload": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name",
                "password",
                "role"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 72
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 72
                },
                "password": {
                    "type": "string",
                    "maxLength": 72,
                    "minLength": 8
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "admin",
                        "manager"
                    ]
                }
            }
        },
        "main.LoginPayload": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 72,
                    "minLength": 8
                }
            }
        },
        "main.StudentRegisterPayload": {
            "type": "object",
            "required": [
                "address",
                "birth_date",
                "classroom_id",
                "email",
                "first_name",
                "last_name",
                "parent_name",
                "parent_phone_number",
                "password",
                "teacher_id"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "birth_date": {
                    "type": "string"
                },
                "classroom_id": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 72
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 72
                },
                "parent_name": {
                    "type": "string"
                },
                "parent_phone_number": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 72,
                    "minLength": 8
                },
                "phone_number": {
                    "type": "string"
                },
                "teacher_id": {
                    "type": "integer"
                }
            }
        },
        "main.TeacherRegisterPayload": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "hire_date",
                "last_name",
                "password",
                "phone_number",
                "subject"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 72
                },
                "hire_date": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 72
                },
                "password": {
                    "type": "string",
                    "maxLength": 72,
                    "minLength": 8
                },
                "phone_number": {
                    "type": "string"
                },
                "subject": {
                    "type": "string",
                    "maxLength": 128
                }
            }
        },
        "main.UpdateExecPayload": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 72
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 72
                },
                "role": {
                    "enum": [
                        "admin",
                        "manager"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/store.Role"
                        }
                    ]
                }
            }
        },
        "main.UpdateStudentPayload": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "maxLength": 256
                },
                "birth_date": {
                    "type": "string"
                },
                "classroom_id": {
                    "type": "integer",
                    "maximum": 16
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 72
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 72
                },
                "parent_name": {
                    "type": "string",
                    "maxLength": 128
                },
                "parent_phone_number": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "teacher_id": {
                    "type": "integer"
                }
            }
        },
        "main.UpdateTeacherPayload": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 72
                },
                "hire_date": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 72
                },
                "phone_number": {
                    "type": "string"
                },
                "subject": {
                    "type": "string",
                    "maxLength": 128
                }
            }
        },
        "main.bulkAttendanceItem": {
            "type": "object",
            "required": [
                "status",
                "student_id"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "present",
                        "absent",
                        "late",
                        "excused"
                    ]
                },
                "student_id": {
                    "type": "integer"
                }
            }
        },
        "main.bulkAttendancePayload": {
            "type": "object",
            "required": [
                "classroom_id",
                "date",
                "statuses"
            ],
            "properties": {
                "classroom_id": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "statuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.bulkAttendanceItem"
                    }
                }
            }
        },
        "main.markAttendancePayload": {
            "type": "object",
            "required": [
                "date",
                "status",
                "student_id"
            ],
            "properties": {
                "classroom_id": {
                    "type": "integer"
                },
                "date": {
                    "description": "YYYY-MM-DD",
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "present",
                        "absent",
                        "late",
                        "excused"
                    ]
                },
                "student_id": {
                    "type": "integer"
                },
                "teacher_id": {
                    "type": "integer"
                }
            }
        },
        "store.AttendanceRecord": {
            "type": "object",
            "properties": {
                "classroom_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "date": {
                    "description": "date part only",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "status": {
                    "description": "'present','absent','late','excused'",
                    "type": "string"
                },
                "student_id": {
                    "type": "integer"
                },
                "teacher_id": {
                    "type": "integer"
                }
            }
        },
        "store.Exec": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/store.Role"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "store.Role": {
            "type": "string",
            "enum": [
                "admin",
                "manager"
            ],
            "x-enum-varnames": [
                "RoleAdmin",
                "RoleManager"
            ]
        },
        "store.Student": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "birth_date": {
                    "type": "string"
                },
                "classroom_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "parent_name": {
                    "type": "string"
                },
                "parent_phone_number": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "teacher_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "store.Teacher": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "hire_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}
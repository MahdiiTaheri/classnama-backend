basePath: /v1
definitions:
  main.ExecRegisterPayload:
    properties:
      email:
        type: string
      first_name:
        maxLength: 72
        type: string
      last_name:
        maxLength: 72
        type: string
      password:
        maxLength: 72
        minLength: 8
        type: string
      role:
        enum:
        - admin
        - manager
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - role
    type: object
  main.LoginPayload:
    properties:
      email:
        type: string
      password:
        maxLength: 72
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  main.StudentRegisterPayload:
    properties:
      address:
        type: string
      birth_date:
        type: string
      classroom_id:
        type: integer
      email:
        type: string
      first_name:
        maxLength: 72
        type: string
      last_name:
        maxLength: 72
        type: string
      parent_name:
        type: string
      parent_phone_number:
        type: string
      password:
        maxLength: 72
        minLength: 8
        type: string
      phone_number:
        type: string
      teacher_id:
        type: integer
    required:
    - address
    - birth_date
    - classroom_id
    - email
    - first_name
    - last_name
    - parent_name
    - parent_phone_number
    - password
    - teacher_id
    type: object
  main.TeacherRegisterPayload:
    properties:
      email:
        type: string
      first_name:
        maxLength: 72
        type: string
      hire_date:
        type: string
      last_name:
        maxLength: 72
        type: string
      password:
        maxLength: 72
        minLength: 8
        type: string
      phone_number:
        type: string
      subject:
        maxLength: 128
        type: string
    required:
    - email
    - first_name
    - hire_date
    - last_name
    - password
    - phone_number
    - subject
    type: object
  main.UpdateExecPayload:
    properties:
      email:
        type: string
      first_name:
        maxLength: 72
        type: string
      last_name:
        maxLength: 72
        type: string
      role:
        allOf:
        - $ref: '#/definitions/store.Role'
        enum:
        - admin
        - manager
    type: object
  main.UpdateStudentPayload:
    properties:
      address:
        maxLength: 256
        type: string
      birth_date:
        type: string
      classroom_id:
        maximum: 16
        type: integer
      email:
        type: string
      first_name:
        maxLength: 72
        type: string
      last_name:
        maxLength: 72
        type: string
      parent_name:
        maxLength: 128
        type: string
      parent_phone_number:
        type: string
      phone_number:
        type: string
      teacher_id:
        type: integer
    type: object
  main.UpdateTeacherPayload:
    properties:
      email:
        type: string
      first_name:
        maxLength: 72
        type: string
      hire_date:
        type: string
      last_name:
        maxLength: 72
        type: string
      phone_number:
        type: string
      subject:
        maxLength: 128
        type: string
    type: object
  main.bulkAttendanceItem:
    properties:
      status:
        enum:
        - present
        - absent
        - late
        - excused
        type: string
      student_id:
        type: integer
    required:
    - status
    - student_id
    type: object
  main.bulkAttendancePayload:
    properties:
      classroom_id:
        type: integer
      date:
        type: string
      statuses:
        items:
          $ref: '#/definitions/main.bulkAttendanceItem'
        type: array
    required:
    - classroom_id
    - date
    - statuses
    type: object
  main.markAttendancePayload:
    properties:
      classroom_id:
        type: integer
      date:
        description: YYYY-MM-DD
        type: string
      note:
        type: string
      status:
        enum:
        - present
        - absent
        - late
        - excused
        type: string
      student_id:
        type: integer
      teacher_id:
        type: integer
    required:
    - date
    - status
    - student_id
    type: object
  store.AttendanceRecord:
    properties:
      classroom_id:
        type: integer
      created_at:
        type: string
      date:
        description: date part only
        type: string
      id:
        type: integer
      note:
        type: string
      status:
        description: '''present'',''absent'',''late'',''excused'''
        type: string
      student_id:
        type: integer
      teacher_id:
        type: integer
    type: object
  store.Exec:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      role:
        $ref: '#/definitions/store.Role'
      updated_at:
        type: string
    type: object
  store.Role:
    enum:
    - admin
    - manager
    type: string
    x-enum-varnames:
    - RoleAdmin
    - RoleManager
  store.Student:
    properties:
      address:
        type: string
      birth_date:
        type: string
      classroom_id:
        type: integer
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      parent_name:
        type: string
      parent_phone_number:
        type: string
      phone_number:
        type: string
      teacher_id:
        type: integer
      updated_at:
        type: string
    type: object
  store.Teacher:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      hire_date:
        type: string
      id:
        type: integer
      last_name:
        type: string
      phone_number:
        type: string
      subject:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API for ClassNama, a school management platform.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: ClassNama
paths:
  /attendance:
    post:
      consumes:
      - application/json
      operationId: markAttendance
      parameters:
      - description: Attendance payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.markAttendancePayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/store.AttendanceRecord'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Mark a single attendance record (create or update)
      tags:
      - Attendance
  /attendance/bulk:
    post:
      consumes:
      - application/json
      operationId: bulkMarkAttendance
      parameters:
      - description: Bulk attendance payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.bulkAttendancePayload'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Bulk mark attendance for a classroom
      tags:
      - Attendance
  /attendance/classrooms/{classroomID}:
    get:
      operationId: getAttendanceByClassroomDate
      parameters:
      - description: Classroom ID
        in: path
        name: classroomID
        required: true
        type: integer
      - description: Date YYYY-MM-DD
        in: query
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/store.AttendanceRecord'
            type: array
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Get attendance for a classroom on a date
      tags:
      - Attendance
  /attendance/students/{studentID}:
    get:
      operationId: getAttendanceByStudent
      parameters:
      - description: Student ID
        in: path
        name: studentID
        required: true
        type: integer
      - description: From date YYYY-MM-DD
        in: query
        name: from
        type: string
      - description: To date YYYY-MM-DD
        in: query
        name: to
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/store.AttendanceRecord'
            type: array
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Get attendance records for a student
      tags:
      - Attendance
  /execs:
    get:
      consumes:
      - application/json
      description: Returns a list of all execs
      operationId: getExecs
      produces:
      - application/json
      responses:
        "200":
          description: List of execs
          schema:
            items:
              $ref: '#/definitions/store.Exec'
            type: array
        "500":
          description: Internal server error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Get all executives
      tags:
      - Execs
  /execs/{execID}:
    delete:
      consumes:
      - application/json
      description: Deletes an exec by ID
      operationId: deleteExec
      parameters:
      - description: Exec ID
        in: path
        name: execID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Exec not found
          schema: {}
        "500":
          description: Internal server error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Delete an executive
      tags:
      - Execs
    get:
      consumes:
      - application/json
      description: Returns a single exec by ID (must be set in context via middleware)
      operationId: getExec
      parameters:
      - description: Exec ID
        in: path
        name: execID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Exec object
          schema:
            $ref: '#/definitions/store.Exec'
        "404":
          description: Exec not found
          schema: {}
        "500":
          description: Internal server error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Get a single executive
      tags:
      - Execs
    patch:
      consumes:
      - application/json
      description: Updates an exec. Only non-nil fields in the payload are updated.
        Versioning ensures concurrency safety.
      operationId: updateExec
      parameters:
      - description: Exec ID
        in: path
        name: execID
        required: true
        type: integer
      - description: Exec fields to update
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.UpdateExecPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Updated exec object
          schema:
            $ref: '#/definitions/store.Exec'
        "400":
          description: Bad request / validation failed
          schema: {}
        "404":
          description: Exec not found
          schema: {}
        "409":
          description: Conflict / concurrent update
          schema: {}
        "500":
          description: Internal server error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Update an executive
      tags:
      - Execs
  /execs/login:
    post:
      consumes:
      - application/json
      description: Login as an Exec (admin or manager) and get a JWT token
      parameters:
      - description: Login payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.LoginPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Returns the logged-in exec and JWT token
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Exec Login
      tags:
      - Execs
  /execs/register:
    post:
      consumes:
      - application/json
      description: Only Execs with manager/admin roles can create new Execs
      parameters:
      - description: Exec registration payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.ExecRegisterPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Returns the created Exec and JWT token
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new Exec
      tags:
      - Execs
  /students:
    get:
      operationId: getStudents
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/store.Student'
            type: array
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Get all students
      tags:
      - Students
    post:
      consumes:
      - application/json
      description: Only Execs with manager/admin roles can create new Students
      parameters:
      - description: Student registration payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.StudentRegisterPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Returns the created Student
          schema:
            $ref: '#/definitions/store.Student'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new Student
      tags:
      - Students
  /students/{studentID}:
    delete:
      operationId: deleteStudent
      parameters:
      - description: student ID
        in: path
        name: studentID
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Delete a student
      tags:
      - Students
    get:
      operationId: getstudent
      parameters:
      - description: student ID
        in: path
        name: studentID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.Student'
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Get a student by ID
      tags:
      - Students
    patch:
      consumes:
      - application/json
      operationId: updateStudent
      parameters:
      - description: student ID
        in: path
        name: studentID
        required: true
        type: integer
      - description: student update payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.UpdateStudentPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.Student'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "409":
          description: Conflict
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Update a student
      tags:
      - Students
  /students/login:
    post:
      consumes:
      - application/json
      description: Login as a Student and get a JWT token
      parameters:
      - description: Login payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.LoginPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Returns the logged-in student and JWT token
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Student Login
      tags:
      - Students
  /teachers:
    get:
      operationId: getTeachers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/store.Teacher'
            type: array
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Get all teachers
      tags:
      - Teachers
    post:
      consumes:
      - application/json
      description: Only Execs with manager/admin roles can create new Teachers
      parameters:
      - description: Teacher registration payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.TeacherRegisterPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Returns the created Teacher
          schema:
            $ref: '#/definitions/store.Teacher'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new Teacher
      tags:
      - Teachers
  /teachers/{teacherID}:
    delete:
      operationId: deleteTeacher
      parameters:
      - description: Teacher ID
        in: path
        name: teacherID
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Delete a teacher
      tags:
      - Teachers
    get:
      operationId: getTeacher
      parameters:
      - description: Teacher ID
        in: path
        name: teacherID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.Teacher'
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Get a teacher by ID
      tags:
      - Teachers
    patch:
      consumes:
      - application/json
      operationId: updateTeacher
      parameters:
      - description: Teacher ID
        in: path
        name: teacherID
        required: true
        type: integer
      - description: Teacher update payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.UpdateTeacherPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.Teacher'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "409":
          description: Conflict
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Update a teacher
      tags:
      - Teachers
  /teachers/{teacherID}/students:
    get:
      consumes:
      - application/json
      description: Returns a list of all students assigned to a specific teacher
      operationId: getStudentsByTeacher
      parameters:
      - description: Teacher ID
        in: path
        name: teacherID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of students
          schema:
            items:
              $ref: '#/definitions/store.Student'
            type: array
        "400":
          description: Bad request
          schema: {}
        "404":
          description: Teacher not found / no students
          schema: {}
        "500":
          description: Internal server error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Get students of a teacher
      tags:
      - Students
  /teachers/login:
    post:
      consumes:
      - application/json
      description: Login as a Teacher and get a JWT token
      parameters:
      - description: Login payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.LoginPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Returns the logged-in teacher and JWT token
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Teacher Login
      tags:
      - Teachers
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
